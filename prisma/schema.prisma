// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
	id String @id @unique
	email String @unique

	File File[]
	Message Message[]

	stripeCustomerId String? @unique @map(name: "stripe_customer_id")
	stripeSubscriptionId String? @unique @map(name: "stripe_subscription_id")
	stipePriceId String? @map(name: "stripe_price_id")
	stipeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

enum UploadStatus {
	PENDING
	PROCESSING
	FAILED
	SUCCESS
}

model File {
	id String @id @default(cuid())
	name String
	uploadStatus UploadStatus @default(PENDING)

	url String
	key String
	message Message[]

	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	User User? @relation(fields: [userId], references: [id])
	userId String?
}

model Message {
	id String @id @default(cuid())
	text String @db.Text()

	isUserMessage Boolean

	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	User User? @relation(fields: [userId], references: [id])
	userId String?

	File File? @relation(fields: [fileId], references: [id])
	fileId String?
}
